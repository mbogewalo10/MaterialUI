{"version":3,"sources":["ButtonAppBar.js","Cards.js","Grid.js","Button.js","Form.js","List.js","Radio.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","card","maxWidth","marginTop","marginBottom","marginLeft","media","height","MediaCard","Card","CardActionArea","CardMedia","component","alt","image","CardContent","gutterBottom","CardActions","size","control","padding","SpacingGrid","React","useState","Grid","container","item","xs","justify","map","value","key","button","margin","input","display","ContainedButtons","ranges","label","flexWrap","textField","flexBasis","OutlinedInputAdornments","amount","password","weight","weightRange","showPassword","values","setValues","handleChange","prop","event","target","TextField","id","clsx","InputProps","startAdornment","InputAdornment","select","onChange","option","MenuItem","type","endAdornment","onClick","onMouseDown","preventDefault","width","backgroundColor","palette","background","paper","CheckboxList","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","List","labelId","ListItem","role","undefined","dense","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","GreenRadio","withStyles","green","props","Radio","RadioButtons","selectedValue","setSelectedValue","name","icon","fontSize","checkedIcon","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84b09f8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n\r\n          </Typography>\r\n          <Button color=\"inherit\">Home</Button>\r\n          <Button color=\"inherit\">Contact</Button>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: 80,\r\n    marginBottom: 80,\r\n    marginLeft: 40,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"Code\"\r\n        height=\"140\"\r\n        image=\"./img/myimage.jpg\"\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            CODE\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          If debugging is the process of removing software bugs, then programming must be the process of putting them in\r\n           â€“ Edsger Dijkstra.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Cards from './Cards';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(10),\r\n    marginLeft: 40\r\n  },\r\n}));\r\n\r\nexport default function SpacingGrid() {\r\n  const [spacing, setSpacing] = React.useState(10);\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event) {\r\n    setSpacing(Number(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={10}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"left\" spacing={spacing}>\r\n          {[0, 1, 2].map(value => (\r\n            <Grid key={value} item>\r\n              <Cards/>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(6),\r\n\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Primary\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from './Button';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n    marginTop: 50,\r\n    marginLeft: 50,\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"outlined-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Name\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Address\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Age\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n\r\n      <TextField\r\n        id=\"outlined-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft: 40,\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CheckboxList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {[0, 1, 2, 3].map(value => {\r\n        const labelId = `checkbox-list-label-${value}`;\r\n\r\n        return (\r\n          <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"comments\">\r\n                <CommentIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\n\r\nconst GreenRadio = withStyles({\r\n      root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport default function RadioButtons() {\r\n  const [selectedValue, setSelectedValue] = React.useState('a');\r\n\r\n  const handleChange = event => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"radio\">\r\n      <Radio\r\n        checked={selectedValue === 'a'}\r\n        onChange={handleChange}\r\n        value=\"a\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'A' }}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'b'}\r\n        onChange={handleChange}\r\n        value=\"b\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'B' }}\r\n      />\r\n      <GreenRadio\r\n        checked={selectedValue === 'c'}\r\n        onChange={handleChange}\r\n        value=\"c\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'C' }}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'd'}\r\n        onChange={handleChange}\r\n        value=\"d\"\r\n        color=\"default\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'D' }}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'e'}\r\n        onChange={handleChange}\r\n        value=\"e\"\r\n        color=\"default\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'E' }}\r\n        icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\r\n        checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ButtonAppBar from './ButtonAppBar';\r\nimport Grid from './Grid';\r\nimport Cards from './Cards';\r\nimport Form from './Form';\r\nimport Button from './Button';\r\nimport List from './List';\r\nimport Radio from './Radio';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ButtonAppBar />\r\n      <Grid />\r\n      <Form />\r\n      <Button />\r\n      <List />\r\n      <Radio />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}